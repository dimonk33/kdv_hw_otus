version: "3.9"
services:
#  app:
#    container_name: hw12-app
#    build: ../build
#    ports:
#      - "8080:8080"
#    restart: on-failure
#    environment:
#      - POSTGRES_USER=user
#      - POSTGRES_PASSWORD=password
#      - POSTGRES_DB=hw
#    volumes:
#      - ../:/usr/src/app/
#    depends_on:
#      - db
#    networks:
#      - hw12-network

  db:
    image: postgres:latest
    container_name: hw12-postgres
    restart: always
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=hw
    ports:
      - '5432:5432'
    volumes:
      - hw12-pg-volume:/var/lib/postgresql/data
    networks:
      - hw12-network

  kafka:
    image: bitnami/kafka:3.1.0
    container_name: kafka
    command:
      - 'sh'
      - '-c'
      - '/opt/bitnami/scripts/kafka/setup.sh && kafka-storage.sh format --config "$${KAFKA_CONF_FILE}" --cluster-id "lkorDA4qT6W1K_dk0LHvtg" --ignore-formatted  && /opt/bitnami/scripts/kafka/run.sh' # Kraft specific initialise
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - AUTO_CREATE_TOPICS=true
      # Start Kraft Setup (Kafka as Controller - no Zookeeper)
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LOG_DIRS=/tmp/logs
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:29092,PLAINTEXT_HOST://:9092,CONTROLLER://:9093
      # End Kraft Specific Setup
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
    ports:
      - '9092:9092'
    networks:
      - hw12-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    ports:
      - "8383:8383"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - SERVER_PORT=8383
    networks:
      - hw12-network
    depends_on:
      - kafka
    links:
      - kafka

volumes:
#  api:
  db:
  hw12-pg-volume:
    external: true
#  kafka-vol:
#    external: true

# Networks to be created to facilitate communication between containers
networks:
  hw12-network:
    driver: bridge
