version: "3.9"

#volumes:
#  db:
#  calendar-pg-volume:
#    external: true

networks:
  calendar-network:
    driver: bridge

services:
  app:
    container_name: calendar-app
    build:
      context: ../
      dockerfile: build/Dockerfile
    ports:
      - "8888:8080"
#    restart: on-failure
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_USER=calendar
      - POSTGRES_PASSWORD=calendar
      - POSTGRES_DB=calendar
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - calendar-network

  migration:
    container_name: calendar-migration
    build:
      context: ../
      dockerfile: migrations/Dockerfile
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_USER=calendar
      - POSTGRES_PASSWORD=calendar
      - POSTGRES_DB=calendar
      - POSTGRES_SSL=disable
    depends_on:
      db:
        condition: service_healthy
    networks:
      - calendar-network

  db:
    image: postgres:latest
    container_name: calendar-postgres
    restart: always
    environment:
      - POSTGRES_USER=calendar
      - POSTGRES_PASSWORD=calendar
      - POSTGRES_DB=calendar
    ports:
      - '5432:5432'
#    volumes:
#      - calendar-pg-volume:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U calendar -d calendar
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - calendar-network

  kafka:
    image: bitnami/kafka:3.1.0
    container_name: kafka
    command:
      - 'sh'
      - '-c'
      - '/opt/bitnami/scripts/kafka/setup.sh && kafka-storage.sh format --config "$${KAFKA_CONF_FILE}" --cluster-id "lkorDA4qT6W1K_dk0LHvtg" --ignore-formatted  && /opt/bitnami/scripts/kafka/run.sh' # Kraft specific initialise
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - AUTO_CREATE_TOPICS=true
      # Start Kraft Setup (Kafka as Controller - no Zookeeper)
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LOG_DIRS=/tmp/logs
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:29092,PLAINTEXT_HOST://:9092,CONTROLLER://:9093
      # End Kraft Specific Setup
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
    ports:
      - '9092:9092'
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "host.docker.internal:9092"]
      interval: 30s
      timeout: 30s
      retries: 4
    networks:
      - calendar-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    ports:
      - "8383:8383"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - SERVER_PORT=8383
    networks:
      - calendar-network
    depends_on:
      - kafka
